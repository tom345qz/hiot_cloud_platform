<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd

		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd

		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <!-- 开启组件扫描 -->
    <!--注解注入:<context:annotation-config/>,使用<context:component-scan base-package=""默认开启注解。/>-->
    <!--Use-dafault-filters=”false”的情况下：<context:exclude-filter>指定的不扫描，<context:include-filter>指定的扫描-->
    <context:component-scan base-package="com.huatec.hiot_cloud.core"/>

    <!-- 配置数据库连接信息 -->
    <util:properties id="jdbc" location="classpath:jdbc.properties"/>
    <bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{jdbc.driver}"/>
        <property name="url" value="#{jdbc.url}"/>
        <property name="username" value="#{jdbc.username}"/>
        <property name="password" value="#{jdbc.password}"/>
        <!--initialSize: 连接池初始值-->
        <property name="initialSize" value="#{jdbc.initialSize}"/>
        <!--maxIdle: 连接池最大空闲连接-->
        <property name="maxIdle" value="#{jdbc.maxIdle}"/>
        <!--minIdle: 连接池最小空闲连接-->
        <property name="minIdle" value="#{jdbc.minIdle}"/>
        <!--maxActive: 连接池最大连接数量-->
        <property name="maxActive" value="#{jdbc.maxActive}"/>
        <!--超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
        <property name="maxWait" value="#{jdbc.maxWait}"/>
        <!--以下两个配合，可以持续更新连接池中的连接对象，当timeBetweenEvictionRunsMillis 大于0时，-->
        <!--每过timeBetweenEvictionRunsMillis 时间，就会启动一个线程，校验连接池中闲置时间超过minEvictableIdleTimeMillis的连接对象。-->
        <property name="timeBetweenEvictionRunsMillis" value="#{jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="#{jdbc.minEvictableIdleTimeMillis}"/>
    </bean>


    <bean id="sqlSessionFactory"
          class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dbcp"/>
        <!-- 加载mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 用于指定sql定义文件的位置(加classpath从src下找),自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath*:sqlmapper/*.xml"/>
        <!--取别名 -->
        <property name="typeAliasesPackage"
                  value="com.huatec.hiot_cloud.core.autogenerator.entity,com.huatec.hiot_cloud.core.dto,com.huatec.hiot_cloud.core.params"/>
    </bean>

    <!-- 配置MapperScannerConfigurer -->
    <!-- 按指定包扫描dao接口，批量生成dao接口实现对象，id为接口名首字母小写，自动注入Dao实现类，无须手动实现 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定扫描com.huatec.radioclub.core.dao包下所有接口 -->
        <property name="basePackage" value="com.huatec.hiot_cloud.core.autogenerator.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--注解实现声明式事务-->
    <!--声明事务管理组件-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dbcp"/>
    </bean>

    <!--带有@Transactional标记的方法会调用transactionManager组件追加事务控制-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--重要！将你的SwaggerConfig配置类注入-->
    <bean class="com.huatec.hiot_cloud.core.config.Swagger2Config"/>

    <!--重要！配置swagger资源不被拦截-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
</beans>