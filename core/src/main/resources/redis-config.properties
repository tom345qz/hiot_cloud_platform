#redis的服务器地址
redis.host=127.0.0.1
#redis的服务端口
redis.port=6379
#密码
redis.pass=
#链接数据库
redis.default.db=0
#客户端超时时间单位是毫秒
redis.timeout=30000
#最大连接数,默认8个
redis.maxTotal=1000
#最大空闲连接数,默认8个
redis.maxIdle=8
#最小空闲连接数, 默认0
redis.minIdle=1
#获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常,默认-1
redis.maxWaitMillis=30000
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个,默认false
redis.testOnBorrow=false
#连接耗尽时是否阻塞, false报异常,true阻塞直到超时, 默认true
redis.blockWhenExhausted=false
#设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)
redis.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
#是否启用pool的jmx管理功能, 默认true
redis.jmxEnabled=true
#是否启用后进先出, 默认true
redis.lifo=true
#逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=900000
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.numTestsPerEvictionRun=3
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
redis.softMinEvictableIdleTimeMillis=900000
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=3600000